AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  instituto-castelo-branco

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 28
    MemorySize: 128
    Runtime: python3.12

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
    Cors:
      AllowOrigin: "'https://www.institutocastelo.com.br'"
      AllowHeaders: "'Content-Type,Authorization'"
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowCredentials: "'true'"

Resources:
  app:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      Handler: main.lambda_handler
      CodeUri: app
      Description: Api para uso do site institucional do instituto castelo branco
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        PublicationsCreate:
          Type: Api # More info about API Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-api.html
          Properties:
            Path: /publications/create
            Method: POST
              # Powertools for AWS Lambda (Python) env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
        
        PublicationsGet:
          Type: Api 
          Properties:
            Path: /publications/{page_size}
            Method: GET
        
        PublicationsDelete:
          Type: Api 
          Properties:
            Path: /publications/id/{id}
            Method: DELETE

        EnrollmentCreate:
          Type: Api
          Properties:
            Path: /enrollment/
            Method: POST
        
        EnrollmentGet:
          Type: Api
          Properties:
            Path: /enrollment/{page_size}
            Method: GET
        
        EnrollmentDelete:
          Type: Api
          Properties:
            Path: /enrollment/id/{id}
            Method: DELETE
          
        EnrollmentStudentCreate:
          Type: Api # More info about API Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-api.html
          Properties:
            Path: /enrollment/enrollment-student
            Method: POST
        
        EnrollmentStudentGet:
          Type: Api
          Properties:
            Path: /enrollment/enrollment-student/{page_size}
            Method: GET
        
        EnrollmentStudentDelete:
          Type: Api
          Properties:
            Path: /enrollment/enrollment-student/id/{id}
            Method: DELETE
                
        GeneratePresignedUrl:
          Type: Api
          Properties:
            Path: /helpers/generate-presigned-url
            Method: GET
        
        CreateUser:
          Type: Api
          Properties:
            Path: /auth/create
            Method: POST
        
        AuthenticateUser:
          Type: Api
          Properties:
            Path: /auth/token
            Method: POST

        SwaggerUI:
            Type: Api
            Properties:
                Path: /swagger
                Method: GET
  
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: instituto-castelo-branco
          POWERTOOLS_METRICS_NAMESPACE: metrics
          POWERTOOLS_LOG_LEVEL: CRITICAL
          AWS_LAMBDA_LOG_LEVEL: CRITICAL
          LOG_LEVEL: CRITICAL
          ENCRYPTION_KEY: 77KbPtn4sGPa1jaJBfxfS8OOpizJPmng20LmCV6h-SE=
          JWT_SECRET_KEY: 219b4080bae904998538010cf696da4119ed26d8953dcd9d8b764f25a0c8fe88
          ENVIROMENT: prd
      Tags:
        LambdaPowertools: python

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  InstitutoCasteloBrancoApi:
    Description: API Gateway endpoint URL for Prod environment for Instituto Castelo Branco Function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/instituto-castelo-branco"

  app:
    Description: Api para uso do site institucional do instituto castelo branco Lambda Function ARN
    Value: !GetAtt app.Arn
